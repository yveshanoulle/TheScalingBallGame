## The DevOps Ball point game  {#TheDevOpsBallPointGame}

This is the [DevOps version of the original ballpoint game](https://twitter.com/johnC_bristol/status/398222616978157568). It was designed by [John Clapham](https://twitter.com/johnC_bristol) to use for the Experience DevOps workshop that he ran together with [Matthew Skelton](https://twitter.com/matthewpskelton) and [James Betteley](https://twitter.com/jamesbetteley).

John wanted players and observers to feel the effects of interrupted an uninterrupted flow, and he wanted constraints on throughput.

As for the orginal ballpoint game, the objective is to pass as many balls as possible through the team. But as opposed to the original ballpoint, the person introducing the ball in the system is not the last person to touch the ball. You earn a ball point each time a ball is dropped in a paper cup.

John added some modifications to the original game:

- Team Growth: The game starts with 3 players, you might think of them as the founders. At each iteration more players are added as the business is growing. Here the game shows how flow gets interrupted as more people join an organisation.
- Silos: The game shows how flow gets interrupted with unchecked/unmanaged growth when organisational, cultural or geographical separation is introduced. DevOps calls this the [wall of confusion](http://dev2ops.org/2010/02/what-is-devops/). During the game this is realised with a physical wall forcing only one touch point between teams, and limited visibility.
- Incentives: As is usual for classic organisations to give different incentives to different departments, we give during the game competing incentives to teams on either side of the wall of confusion.
- Contstrained Throughput: The game adds a constrained to the throughput of the system. The players need to consider downstream flow like is the most of the time the case in classic organisations between development teams and test and/or operations teams. This is analoguous with planning and executing manual regression tests or planning and configuring new IT systems. For the game we use paper cups to receive the balls. Each cup has capacity - 2 balls or more - and a cost - 10 seconds notice to spin up. If a cup is not ready, the team has 2 options: either wait for a cup to get ready and the team gets a ballpoint, or drop the ball.
- Start person is not the end person: Because the last person places balls in the cups, and potentially requests more balls, it is not practical to have that same person as start and end point.

The physical wall is a flow constraint, representing cultural, organisational or geographical differences.

The paper cups are intended to represent expertise from operations with a lead time: server commissioning and configuration, it could also be deployment time or time to get through change control.

You can find more Information on John's version in the Appendix

